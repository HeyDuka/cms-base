Widget.types.language_input = {
	prepare: function() {
		// wrap select name language_id if option return_options_only is set to false
		var option = jQuery('<option/>');
		var languages = this.getLanguages(this.settings.use_admin_languages);
		jQuery.each(languages, function(i, language) {
			option.clone().text(language.language_name).attr('value', language.id).appendTo(this._element);
		}.bind(this));
		if(this.settings.international_option) {
			option.text(this.settings.international_option).val('').prependTo(this._element);
		}
		
		//Add change handler
		this._element.change(function() {
			if(this.settings.store_value) {
				this.setSelectedLanguageId(this._element.val());
			}
			this.fire('value-changed', this._element.val());
		}.bind(this));
		var current_value = this.getSelectedLanguageId();
		if(current_value === null) {
			current_value = '';
		}
		this._element.val(current_value);
			
	},
	
	settings: {
		international_option: "{{writeString=wns.language.international}}",
		use_admin_languages: false,
		store_value: false
	}
};