Widget.types.string_detail = {
	initialize: function() {
		this.content = jQuery.parseHTML("{{includeTemplate=edit}}");
		Widget.create('detail', function(widget) {
			this.detail_widget = widget;
			jQuery.extend(widget.settings, {
				title: "{{writeString=create}}",
				width: 600,
				save_callback: this.save.bind(this)
			});
			widget.content = this.content;
			if(this.auto_open) {
				this.open(this.auto_open.requires_data, this);
			}
		}.bind(this));
	},
	
	open: function(requires_data) {
		if(!this.detail_widget) {
			this.auto_open = {requires_data: requires_data};
			return false;
		}
		this.detail_widget.open();
		if(requires_data) {
			this.fill_data();
		}
	},
	
	fill_data: function() {
		var string_detail = this;
		var language_content = this.content.find('.edit_language_content');
		language_content.empty();
		this.getStringData(function(string_data) {
			Widget.createWithElement('language_tabs', function(widget) {
				widget.handle('element_set', function(event, element) {
					language_content.append(element);
				});
			}, function(language_tabs) {
				language_tabs.handle('tab.created', function(event, language_id, tab_content) {
					var textarea = jQuery.parseHTML('{{includeTemplate=edit_language}}');
					textarea.attr('name', textarea.attr('name')+language_id);
					textarea.val(string_detail.getTextFor(language_id));
					tab_content.append(textarea);
				}, false, true);
			});
			this.string_key_old = string_data.StringKey;
			this.content.find("input[name='string_key']").val(string_data.StringKey);
			this.detail_widget.set_title(this.detail_widget.settings.title = string_data.StringKey);
		});
	},
	
	save: function() {
		var form_data = this.content.serializeArrayKV();
		form_data.string_key_old = this.string_key_old;
		this.saveData(form_data, this.save_callback);
		return true;
	},
	
	close: function() {
		this.detail_widget.close();
		this.close_callback();
	},
	
	save_callback: jQuery.noop,
	close_callback: jQuery.noop
};