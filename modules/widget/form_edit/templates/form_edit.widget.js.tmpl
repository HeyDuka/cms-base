Widget.types.form_edit = {
	prepare: function() {
		var content = jQuery.parseHTML("{{includeTemplate=edit}}");
		var _this = this;
		this._element.append(content);
		
		var types_dropdown = this._element.find("select[name='form_type']").populate(this.getTypeOptions());
		this._element.find("select[name='request_method']").populate(this.getMethodOptions());
		this._element.find("select[name='manager']").populate(this.getManagerOptions());
		
		this.form_field_prototype = jQuery.parseHTML("{{includeTemplate=form_field}}");
		this.form_field_prototype.find(".switcher_field").populate(this.getFieldTypeOptions());
		
		types_dropdown.bind('change', function() {
			_this._element.find('.conditional_field-for-form_type').hide().filter('.'+jQuery(this).val()).show();
		}).change();
		
		var template_name_preview = this._element.find('.e_mail_template_name');
		this._element.find("input[name='template_addition']").keyup(function() {
			var value = jQuery.trim(jQuery(this).val());
			if(!value) {
				template_name_preview.text('e_mail_form_output.tmpl');
			} else {
				template_name_preview.text('e_mail_form_output_'+value+'.tmpl');
			}
		}).keyup();
		
		this.form_field_area = this._element.find('.form_fields');
		this.form_field_area.sortable();
		
		this._element.find('.add_entry').bind('click', function() {
			_this.add_item();
		});
		
		this._element.delegate('.remove_entry', 'click', function() {
			jQuery(this).closest('fieldset').remove();
		});
		
		this.update();
	},
	
	add_item: function(data) {
		var field = this.form_field_prototype.clone();
		this.form_field_area.append(field);
		if(data) {
			jQuery.each(data, function(name, value) {
				field.find(":input[name='"+name.escapeSelector()+"[]']").val(value);
			}.bind(this));
		}
	},
	
	update: function() {
		var current_mode = this.getDisplayMode();
		if(!current_mode) {
			return;
		}
		jQuery.each(current_mode, function(name, value) {
			if(name === 'objects') {
				jQuery.each(value, function(i, field) {
					this.add_item(field);
				}.bind(this));
			} else {
				this._element.find(":input[name='"+name.escapeSelector()+"']").val(value);
			}
		}.bind(this));
	},
	
	save: function(callback) {
		var form_settings = this._element.serializeArrayKV();
		this.saveData(form_settings, callback);
	}
};