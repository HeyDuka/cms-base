Widget.types.page_type = {
	initialize: function() {
		if(this.settings.page_type) {
			this.setPageType(this.settings.page_type, this.settings.page_id, this.settings.language_id);
		} else {
			this.settings.page_type = this.getPageType();
		}
		this.listPageTypeMethods(function(methods) {
			jQuery.each(methods, function(i, method_name) {
				this.methods[method_name] = this.callPageTypeMethod.bind(this, method_name);
			}.bind(this));
		});
		var js_location = this.getPageTypeJs();
		jQuery.ajax({
			url: js_location,
			dataType: 'script',
			async: false
		});
	},

	page_type_js: function() {
		if(jQuery.isFunction(Widget.types.page_type.types[this.settings.page_type])) {
			if(!this.page_type_instance) {
				this.page_type_instance = new Widget.types.page_type.types[this.settings.page_type](this, this.settings.page_id, this.settings.container);
			}
			return this.page_type_instance;
		}
		return Widget.types.page_type.types[this.settings.page_type];
	},
	
	handle_preview: function() {
		this.page_type_js().handle_preview(this.settings.page_id, this);
	},
	
	handle_admin: function() {
		this.page_type_js().handle_admin(this.settings.page_id, this.settings.container, this);
	},
	
	will_save: function() {
		var page_type = this.page_type_js();
		if(page_type.will_save) {
			page_type.will_save(this.settings.page_id, this.settings.container, this);
		}
	},
	
	did_save: function() {
		var page_type = this.page_type_js();
		if(page_type.did_save) {
			page_type.did_save(this.settings.page_id, this.settings.container, this);
		}
	},

	methods: {
		
	},
	
	settings: {
		page_type: null,
		container: null,
		page_id: null,
		active_languages: null
	},
	
	types: {}
};
