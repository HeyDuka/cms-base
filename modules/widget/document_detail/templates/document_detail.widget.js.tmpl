Widget.types.document_detail = {
	initialize: function() {
		var _this = this;
		
		this.content = jQuery.parseHTML("{{includeTemplate=edit}}");
		this.content.find('div.hide_if_not_saved').hide();
		
		this.file_upload = this.content.find("input[name='file_upload']");
		
		this.uploader = Widget.create('file_upload');
		
		Widget.create('detail', function(widget) {
			_this.detail_widget = widget.set_instance(_this);
			var old_save_handler = _this.detail_widget.settings.save_callback;
			_this.current_detail_id = null;
			_this.detail_widget.settings.save_callback = function() {
				if(_this.file_upload.val()) {
					var file = _this.file_upload[0].files[0];
					_this.file_upload.attr('disabled', true);
					_this.uploader.upload_file(file, {document_id: _this.current_detail_id, callback: function(result) {
						_this.upload_success(result);
						_this.settings.remains_open = true;
						old_save_handler.call(_this.detail_widget);
					}, error: _this.upload_error.bind(_this)});
				} else {
					_this.settings.remains_open = false;
					old_save_handler.call(this);
				}
			};
			jQuery.extend(widget.settings, {
				title: "{{writeString=widget.new_entry}}",
				width: 550,
				dialogClass: "document_detail"
			});
			widget.content = _this.content;
			
			_this.content.find("select[name='document_category_id']").prepareWidget();
			_this.content.find("select[name='language_id']").prepareWidget();
			
			
			_this.uploader.allow_drag_to(_this.content, null, function(target) {
				return {document_id: _this.current_detail_id, callback: _this.upload_success.bind(_this), error: _this.upload_error.bind(_this)};
			}, true);

			_this.file_upload.change(function(event) {
				_this.detail_widget.clear_validation();
			});
			
			if(_this.auto_open) {
				_this.open();
			}
		});
	},
	
	upload_error: function(error) {
		this.file_upload.attr('disabled', false);
		if(error) {
			this.detail_widget.validate_with({upload: jQuery.parseHTML('<span class="error_display"/>').text(error.message)});
		}
	},
	
	upload_success: function(result, no_reload) {
		this.upload_error();
		this.file_upload.val('');
		var is_new = this.current_detail_id === null;
		if(is_new) {
			this.setDocumentId(result);
		}
		if(!no_reload) {
			this.fill_data(!is_new);
		}
		//TODO: reload list row and info part of detail
	},
	
	open: function() {
		if(!this.detail_widget) {
			this.auto_open = true;
			return false;
		}
		this.detail_widget.open();
		this.detail_widget.content.find('input[name=name]').focus();
	},
	
	fill_data: function(is_upload_only) {
		this.detail_widget.set_is_loading(true);
		this.getDocumentData(function(document_data) {
			this.content.find(".preview").text('').addClass('file_exists');
			this.preview(function(result) {
				this.content.find(".preview").html(result);
			});
			this.detail_widget.content.find('div.hide_if_not_saved').show();
			this.content.find(".updated_info").text(document_data.UpdatedInfo);
			this.content.find(".created_info").text(document_data.CreatedInfo);
			this.content.find('div.hide_if_not_saved').show();
			this.content.find(".detail_id").text(document_data.Id);
			this.content.find(".file_size").text(document_data.FileInfo);
			this.content.find(".original_name").text(document_data.OriginalName);
			
			if(!is_upload_only) {
				if(document_data.DocumentCategoryId === null) {
					document_data.DocumentCategoryId = '';
				}
				if(document_data.LanguageId === null) {
					document_data.LanguageId = '';
				}
				if(document_data.Id != null) {
					this.content.find("label[for='file_upload']").text("{{writeString=widget.document.file_upload_replace}}");
				}
				this.content.find("input[name='name']").val(document_data.Name);
				this.content.find("textarea[name='description']").val(document_data.Description);
				this.content.find("select[name='document_category_id']").val(document_data.DocumentCategoryId);
				this.content.find("select[name='language_id']").val(document_data.LanguageId);
				this.content.find("input[name='is_protected']").attr('checked', document_data.IsProtected);
				this.content.find("input[name='is_inactive']").attr('checked', document_data.IsInactive);
				this.current_detail_id = document_data.Id;
				this.detail_widget.set_title(this.detail_widget.settings.title = "{{writeString=widget.document}}"+' '+document_data.Name);
			}
			this.detail_widget.set_is_loading(false);
		});
	},
	
	close: function() {
		this.detail_widget.close();
		this.close_callback();
	},
	
	save_callback: function(data) {
		this.file_upload;
		alert('save_callback');
	},
	close_callback: jQuery.noop
};