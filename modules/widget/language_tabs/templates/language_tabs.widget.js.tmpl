Widget.types.language_tabs = {
	prepare: function() {
		var language_tabs = this;
		this.initial_tab = null;
		var current_language = null;
		var tab_config = {
			add: function(event, ui) {
				var tab = jQuery(ui.tab);
				if(language_tabs.initial_tab === null) {
					language_tabs.initial_tab = {tab: jQuery(ui.tab), panel: jQuery(ui.panel)};
				}
				tab.data('language_id', current_language);
			},
			
			show: function(event, ui) {
				var tab = jQuery(ui.tab);
				var language_id = tab.data('language_id');
				if(!language_id) {
					return;
				}
				if(!tab.data('initialized')) {
					language_tabs.fire('tab.created', language_id, jQuery(ui.panel));
					tab.data('initialized', true);
				}
				language_tabs.updateContentLanguage(language_id, function() {
					Widget.fire('cmos.language_changed');
				});
				language_tabs.fire('tab.selected', language_id, jQuery(ui.panel));
			}
		};
		this._element.append('<ul/>').tabs(tab_config);
		
		var languages = this.getLanguages();
		jQuery.each(languages, function(language_id, localized_name) {
			current_language = language_id;
			language_tabs._element.tabs('add', "#"+language_id, localized_name);
		});
		tab_config.show(null, this.initial_tab);
	}
};