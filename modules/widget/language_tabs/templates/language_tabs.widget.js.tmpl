Widget.types.language_tabs = {
	prepare: function() {
		var language_tabs = this;
		this.initial_tab = null;
		var current_language = null;
		var tab_config = {
			add: function(event, ui) {
				var tab = jQuery(ui.tab);
				if(language_tabs.initial_tab === null) {
					language_tabs.initial_tab = {tab: jQuery(ui.tab), panel: jQuery(ui.panel)};
				}
				tab.data('language_id', current_language);
			},
			
			show: function(event, ui) {
				var tab = jQuery(ui.tab);
				var language_id = tab.data('language_id');
				if(!language_id) {
					return;
				}
				if(!tab.data('panel')) {
					tab.data('panel', jQuery(ui.panel));
					language_tabs.fire('tab.created', language_id, jQuery(ui.panel));
				}
				language_tabs.updateContentLanguage(language_id, Widget.fire.bind(Widget, 'cmos.language_changed'));
				language_tabs.fire('tab.selected', language_id, jQuery(ui.panel));
			}
		};
		
		var inserter_is_parent = false;
		var inserter = this._element.prev();
		if(inserter.length == 0) {
			inserter_is_parent = true;
			inserter = this._element.parent();
		}
		this._element.appendTo(document.body).append('<ul/>').tabs(tab_config);
		
		var languages = this.getLanguages();
		jQuery.each(languages, function(language_id, localized_name) {
			current_language = language_id;
			language_tabs._element.tabs('add', "#language_tabs-"+Widget.uuid()+'-'+language_id, localized_name);
		});
		//Configure initial tab (show method was called with null panel)
		tab_config.show(null, this.initial_tab);
		
		if(inserter_is_parent) {
			inserter.prepend(this._element);
		} else {
			inserter.after(this._element);
		}
	},
	
	all_panels: function() {
		var result = {};
		this._element.find('.ui-tabs-nav li a').each(function() {
			var tab = jQuery(this);
			if(tab.data('panel')) {
				result[tab.data('language_id')] = tab.data('panel');
			}
		});
		return result;
	},
	
	set_needs_update: function() {
		
	}
};