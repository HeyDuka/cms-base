Widget.types['language_object_control'] = {
	prepare: function() {
		var _this = this;
		if(this._element) {
			//Special case for when the widget is used outside the default page type
			this.editor(function(result) {
				Widget.createWithElement(result[0], function(widget) {
					_this.detail_widget = widget;
					widget.handle('element_set', function(event, element) {
						Widget.callStatic('detail', 'clickable_labels_for', element);
						_this._element.append(element);
					});
					var save = _this.save;
					_this.save = function(callback) {
						save.call(_this, widget.save(), callback || jQuery.noop);
					};
				}, jQuery.noop, result[1]);
			});
		}
	},
	
	validate_with: function(params) {
		if(this.detail_widget && this.detail_widget._element) {
			Widget.callStatic('detail', 'validate_with', params, this.detail_widget._element);
		} else {
			Widget.exception_type_handlers.ValidationException({parameters: params}, 'language_object_control', this.widgetId);
		}
	},
	
	settings: {}
};