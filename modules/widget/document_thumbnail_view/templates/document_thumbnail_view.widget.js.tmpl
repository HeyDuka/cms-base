Widget.types.document_thumbnail_view = {
	prepare: function() {
		this.reload();
		var _this = this;
		Widget.create("document_detail", function(detail) {
			_this.detail = detail;
			detail.save_callback = function(returnValue) {
				_this.reload();
			};
		});

	},
	
	reload: function() {
		Widget.load();
		this._element.empty();
		this.listDocuments(this.settings.thumbnail_size, function(result) {
			var picker_object = this;
			jQuery.each(result, function() {
				picker_object.insert_thumbnail(this);
			});
			var buttons = {};
			if(this.settings.allows_multiselect) {
				this._element.selectable({
					selecting: function(event, ui) {
						jQuery(ui.selecting).addClass('ui-state-active');
					},
					unselecting: function(event, ui) {
						jQuery(ui.unselecting).removeClass('ui-state-active');
					},
					filter: "> div",
					stop: function() {
						
						//FIXME: Change button active state, add selected ids to document_ids
						var document_ids = [];
						picker_object.fire('selected', document_ids, ui.selected);
					}
				});
				buttons["{{writeString=wns.image_picker.insert}}"] = function() {
					var selected = picker_object._element.children('.ui-selected');
					if(selected.length > 0) {
						var collection = [];
						selected.each(function() {
							collection[collection.length] = jQuery(this).data('document_id');
						});
						selected.removeClass('ui-selected ui-state-active');
						picker_object.callback.apply(picker_object, collection);
					}
				};
			} else {
				this._element.children('div').bind('click', function() {
					var document_id = jQuery(this).data('document_id');
					picker_object.fire('clicked', this, document_id);
				});
			}
			Widget.end_load();
		});
	},
	
	insert_thumbnail: function(theDocument) {
		var _this = this;
		var px_size = ''+this.settings.thumbnail_size+'px';
		var document_id = theDocument.id;
		var doc = jQuery('<div/>').addClass('ui-widget ui-widget-content ui-image-picker-image ui-placeholder');
		doc.css({width: px_size, height: px_size});
		// handle delete
		jQuery('<span/>').addClass('ui-icon ui-icon-trash').click(function() {
			var delete_message = AdminInterface.strings.get_parameterized_string('widget.document.delete_warning', { document_name: theDocument.name});
			Widget.confirm("{{writeString=wns.delete_warning_title}}", delete_message, function(confirmed) {
				if(confirmed) {
					_this.deleteDocument({id: document_id}, function(result) {
						jQuery(doc).remove();
						_this.fire('document-removed', {id: document_id});
					});
				}
			});
		}).appendTo(doc);
		
		var document_object = jQuery.parseHTML(theDocument.preview);
		doc.append(document_object);
		// handle edit
		doc.bind('dblclick', function(event) {
			_this.detail.setDocumentId(document_id);
			_this.detail.current_doc = doc;
			_this.detail.fill_data();
			_this.detail.open();
			event.preventDefault();
			event.stopPropagation();
		});
		doc.data('document_id', document_id);
		Widget.tooltip(doc, theDocument.name);
		doc.hover(function() {
			doc.addClass('ui-state-hover');
		}, function() {
			doc.removeClass('ui-state-hover');
		});
		this._element.append(doc);
	},
	
	append_thumbnail_with_document_id: function(document_id) {
		this.singleDocument(document_id, this.settings.thumbnail_size, function(theDocument) {
			this.insert_thumbnail(theDocument);
		});
	},
	
	document_url_from_id: function(document_id, image_width) {
		return FILE_PREFIX+'/display_document/'+document_id+(image_width ? '?max_width='+image_width : '');
	},
	
	settings: {
		allows_multiselect: true,
		thumbnail_size: 180
	}
};
