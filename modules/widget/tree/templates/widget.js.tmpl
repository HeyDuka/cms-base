Widget.types.tree = {
	prepare: function() {
		this.reload();
	},
	
	reload: function() {
		this._element.empty();
		this.open_item(null);
	},
	
	open_item: function(item) {
		var tree = this;
		this.listChildren(item, function(children) {
			jQuery.each(children, function(i, child) {
				tree.add_item(item, child)
			});
		});
	},
	
	add_item: function(parent, child) {
		if(parent === null) {
			parent = this._element;
		}
		if(parent.is('li')) {
			var new_parent = jQuery(document.createElement(this._element.is('ul') ? 'ul' : 'ol'));
			parent = new_parent.appendTo(parent);
		}
		var element = jQuery("<li/>").text(this.settings.description_from_item(child));
		var opener = jQuery("<div/>").addClass('opener');
		if(this.settings.has_children(child)) {
			opener.addClass('openable');
			opener.click(this.open_item.bind(this))
		}
		parent.append(element);
		return parent;
	},
	
	settings: {
		description_from_item: jQuery.noop,
		has_children: jQuery.noop
	}
};