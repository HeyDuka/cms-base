Widget.types.generic_frontend_module = {
	prepare: function() {
		if(!this._element.attr('data-widget-type')) {
			this.internal_widget = null;
		} else {
			this._element.prepareWidget(function(widget) {
				this.internal_widget = widget;
			}.bind(this), jQuery.noop);
		}
	},
	
	save: function(callback) {
		if(!this.internal_widget) {
			return this.saveData('', callback);
		}
		
		var data = null;
		
		switch(this.internal_widget.widgetType) {
			case 'rich_text':
				data = this.internal_widget.get_data() || '';
				break;
		}
		
		this.saveData(data, callback);
	},
	
	destroy: function() {
		if(!this.internal_widget) {
			return;
		}
		
		switch(this.internal_widget.widgetType) {
			case 'rich_text':
				this.internal_widget.destroy();
				break;
		}
	},
	
	resize_to: function(width, height) {
		if(!this.internal_widget) {
			return;
		}
		
		switch(this.internal_widget.widgetType) {
			case 'rich_text':
				this.internal_widget.resize_to(width, height);
				break;
		}
	}
}