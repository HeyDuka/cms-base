Widget.types.role_detail = {
	initialize: function() {
		var _this = this;
		this.content = jQuery.parseHTML("{{includeTemplate=edit}}");
		this.right_content = jQuery.parseHTML("{{includeTemplate=right}}");
		this.right_content.find('[name="page_id[]"]').prepareWidget();


		this.content.find('div.hide_if_not_saved').hide();
		Widget.create('detail', function(widget) {
			this.detail_widget = widget.set_instance(this);
			jQuery.extend(widget.settings, {
				title: "{{writeString=widget.role.create}}",
				width: 540
			});
			widget.content = this.content;
			if(this.auto_open) {
				this.open();
			}
		}.bind(this));
		
		var rights_container = this.content.find('.rights_container');
		rights_container.delegate('.delete_right', 'click', function(event) {
			var delete_this_right = jQuery(this);
			var right_content = delete_this_right.closest('.role-rights');
			right_content.remove();
		});
		var add_new_right_button = jQuery('<button/>').addClass('add-new-item ui-icon ui-icon-plusthick').button().text(' ');
		
		var add_new_right_button = jQuery('<a/>').addClass('add-new-item add_entry').text(' ');
		add_new_right_button.click(function() {
			_this.right_content.clone().appendTo(rights_container);
		});
		rights_container.after(add_new_right_button);
	},
	
	open: function() {
		if(!this.detail_widget) {
			this.auto_open = true;
			return false;
		}
		this.detail_widget.open();
	},
		
	fill_data: function() {
		var _this = this;
		this.getRoleData(function(role_data) {
			this.content.find("input[name='role_key']").val(role_data.RoleKey);
			this.content.find("textarea[name='description']").val(role_data.Description);
			this.content.find(".updated_info").text(role_data.UpdatedInfo);
			this.content.find(".created_info").text(role_data.CreatedInfo);
			this.content.find('div.hide_if_not_saved').show();
			var rights_container = this.content.find('.rights_container').empty();

			jQuery.each(role_data.rights, function(right_id, rights_data) {
				var right_content = _this.right_content.clone();
				right_content.find('select[name="page_id[]"]').val(rights_data.PageId);
				right_content.find('input[name="is_inherited[]"]').attr('checked', rights_data.IsInherited);
				right_content.find('input[name="may_edit_page_details[]"]').attr('checked', rights_data.MayEditPageDetails);
				right_content.find('input[name="may_edit_page_contents[]"]').attr('checked', rights_data.MayEditPageContents);
				right_content.find('input[name="may_delete[]"]').attr('checked', rights_data.MayDelete);
				right_content.find('input[name="may_create_children[]"]').attr('checked', rights_data.MayCreateChildren);
				right_content.find('input[name="may_view_page[]"]').attr('checked', rights_data.MayViewPage);
				right_content.appendTo(rights_container);
			});
			this.detail_widget.set_title(this.detail_widget.settings.title = role_data.RoleKey);
		});
	},
	
	close: function() {
		this.detail_widget.close();
		this.close_callback();
	},
	
	save_callback: jQuery.noop,
	close_callback: jQuery.noop
};