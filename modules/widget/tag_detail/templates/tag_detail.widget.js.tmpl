Widget.types.tag_detail = {
	initialize: function() {
		this.content = jQuery.parseHTML("{{includeTemplate=edit}}");
		Widget.create('detail', function(widget) {
			this.detail_widget = widget.set_instance(this);
			jQuery.extend(widget.settings, {
				width: 600
			});
			widget.content = this.content;
			if(this.auto_open) {
				this.open();
			}
		}.bind(this));
	},
	
	open: function() {
		if(!this.detail_widget) {
			this.auto_open = true;
			return false;
		}
		this.detail_widget.open();
		this.detail_widget.content.find('input[name=name]').focus();
	},
	
	fill_data: function() {
		_this = this;
		this.getTagData(function(tag_data) {
			this.content.find("input[name='name']").val(tag_data.Name);
			this.content.find(".updated_info").text(tag_data.UpdatedInfo);
			this.content.find(".created_info").text(tag_data.CreatedInfo);
			var tagged_items = this.content.find("ul.tagged_items");
			jQuery.each(tag_data.tagged_models_and_items, function(i, params) {
				var item = jQuery('<li/>').text(params.name);
				var delete_button = jQuery("<span/>").addClass('ui-icon ui-icon-trash').click(function() {
					_this.deleteTaggedItem(tag_data.Id, params.tagged_item_id, params.model_name, function(result) {
						result && item.remove();
					});
				}).appendTo(item);
				tagged_items.append(item);
			});
		});
	},

	close: function() {
		this.detail_widget.close();
		this.close_callback();
	},
	
	save_callback: jQuery.noop,
	close_callback: jQuery.noop
};