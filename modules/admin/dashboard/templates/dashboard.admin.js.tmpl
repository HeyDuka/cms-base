jQuery(document).ready(function() {
	var db = AdminInterface.content.find('#dashboard-columns');
	
	var add_to_column = function(column_name, skeleton) {
		var column = db.find('.dashboard-column#'+column_name);
		if(column.length !== 1) {
			column = db.find('.dashboard-column').eq(0);
		}
		column.append(skeleton.skeleton);
		column.data('dashboard-skeleton', skeleton);
	};
	
	Widget.create('dashboard_control', function(dashboard_control) {
		
		var create_module = function(settings) {
			var module = jQuery.extend(true, {
				config: {},
				color: '#555',
				collapsed: false,
				type: null,
				contrastColor: 'white'
			}, settings || {});
			if(!module.uid) {
				module.uid = Widget.uuid();
			}
			return module;
		};
		
		var create_skeleton = function(module) {
			var uid = module.uid;
			var skeleton = jQuery.parseHTML('{{includeTemplate=skeleton}}');
			var heading = skeleton.find('.dashboard-widget-head h3').text(module.title);
			skeleton.attr('id', uid);
			skeleton.css({backgroundColor: module.color});
			heading.css({color: module.contrastColor});
			
			var result = {
				module: module,
				skeleton: skeleton,
				heading: heading,
				content: skeleton.find('.dashboard-widget-content'),
				collapse: function() {
					skeleton.find('a.collapse').click();
				}
			};
			
			//Change handlers
			skeleton.bind('db-configured.dashboard', function(event) {
				module.color = skeleton.css('backgroundColor');
				module.title = heading.text();
				module.contrastColor = heading.css('color');
				result.config_form.triggerHandler('db-configured'); //For Rich-Text areas and other elements that need to clean up before serializeArrayKV gives the correct value
				module.config = result.config_form.serializeArrayKV();
				if(result.widget.changed_dashboard_config) {
					result.widget.settings.dashboard = jQuery.extend(result.widget.settings.dashboard || {}, module.config);
					result.widget.changed_dashboard_config();
				}
				dashboard_control.saveSettings(uid, module);
			});
			skeleton.bind('db-collapsed.dashboard', function(event, state) {
				module.collapsed = state;
				dashboard_control.changeCollapsed(uid, state);
			});
			skeleton.bind('db-moved.dashboard', function(event, move) {
				module.container = move.to;
				dashboard_control.move(uid, move.to, move.pos);
			});
			skeleton.bind('db-removing.dashboard', function(event) {
				Widget.confirm('{{writeString=wns.dashboard.remove}}', '{{writeString=wns.dashboard.remove_widget}}', function(removed) {
					if(removed) {
						dashboard_control.remove(uid, function() {
							skeleton.unbind('.dashboard');
							skeleton.remove();
						});
					}
				});
			});
			
			return result;
		};
		
		var init_widget = function(skeleton) {
			var module = skeleton.module;
			Widget.createWithElement(module.type, function(widget) {
				skeleton.widget = widget;
				widget.settings.is_dashboard = true;
				widget.settings.dashboard = jQuery.extend(widget.settings.dashboard || {}, module.config);
				widget.handle('element_set', function(event, element) {
					skeleton.content.append(element);
				});
				
				//Config area
				var form = widget.dashboard_config_form ? widget.dashboard_config_form() : jQuery('<form/>');
				Widget.callStaticWidgetMethod('detail', 'clickable_labels_for', form);
				skeleton.config_form = form;
				form.appendTo(skeleton.skeleton.find('.dashboard-edit-box'));
				form.bind('submit', function(event) {
					event.preventDefault();
				});
			}, function(widget) {
				if(module.collapsed) {
					skeleton.collapse();
				}
			});
		};
		
		var reload;
		reload = function() {
			dashboard_control.template(function(template) {
				//Clear elements and bound handlers
				db.find('.dashboard-widget').unbind('.dashboard').empty();
				
				//Reload
				db.html(template);
			
				dashboard_control.allDashboardModules(function(modules) {
					var skeletons = [];
					jQuery.each(modules, function(i, module) {
						module = create_module(module);
						var skeleton = create_skeleton(module);
						add_to_column(module.container, skeleton);
						skeletons.push(skeleton);
					});
					
					//Init the dashboard, init widgets afterwards
					Dashboard.init();
					
					jQuery.each(skeletons, function(i, skeleton) {
						init_widget(skeleton);
					});
				});
			});
		};
		
		reload();
		

		AdminInterface.info_bar.prepareWidget(function(info_bar) {
			dashboard_control.listDashboardModules(function(modules) {
				info_bar.add_button('add-new-item', function() {
					var dialog = jQuery.parseHTML('{{includeTemplate=add_dialog}}');
					var columns = {};
					db.find('.dashboard-column').each(function() {
						columns[this.id] = this.id;
					});
					var column = dialog.find('select[name=column]').populate(columns);
					var type = dialog.find('select[name=type]').populate(modules);
					var buttons = [
						{
							text: "{{writeString=wns.add}}",
							className: 'primary ui-state-highlight',
							click: function() {
								Widget.createWithElement(type.val(), function(widget) {
									var module = create_module({
										type: type.val(),
										title: type.find(':checked').text()
									});
									dashboard_control.saveSettings(module.uid, module);
									var skeleton = create_skeleton(module);
									add_to_column(column.val(), skeleton);
					
									//Add the controls
									Dashboard.addWidgetControls();
									Dashboard.makeSortable();
					
									init_widget(skeleton);
									dialog.dialog("destroy");
								});
							}
						},
						{
							text: "{{writeString=wns.cancel}}",
							className: 'secondary',
							click: function() {
								dialog.dialog("destroy");
							}
						}
					];
					dialog.dialog({
						buttons: buttons
					});
				}, 'n', true);
			});
			
			dashboard_control.possibleTemplates(function(templates) {
				var template_chooser = jQuery('<select/>');
				template_chooser.populate(templates);
				template_chooser.val(dashboard_control.getLayoutName());
				template_chooser.change(function() {
					dashboard_control.setLayoutName(template_chooser.val());
					reload();
				});
				info_bar.add_element(template_chooser, true, false, 't');
			});
		});
	});
});
