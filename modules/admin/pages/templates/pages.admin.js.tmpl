jQuery(document).ready(function() {
	var page_detail = null;
	var page_tree = null;
	
	var initial_selection = {{writeRequestValue=initial_page_id}};

	Widget.createWithElement('page_detail', function(widget) {
		widget.settings.delete_callback = function(page_id) {
			// do not remove element if NotPermittedException
			if(!arguments[1]) {
				page_tree.remove_element_with_identifier(page_id);
			} 
		};
		//Add event handlers in intermediate callback
		page_detail = widget;
		page_detail.handle('loading', function() {
			Widget.load();
			// info_bar_buttons.hide();
			page_detail.disable_input();
		});
		page_detail.handle('loaded', function() {
			if(Widget.callStatic('permission', 'mayEditPageDetails', page_detail.current_page_id)) {
				page_detail.enable_input();
			}
			Widget.end_load();
		});
		page_detail.handle('saved', function(event) {
			var page_id = page_detail.current_page_id;
			var element = page_tree.element_with_identifier(page_id);
			page_tree.reload_element(page_tree.parent_of(element));
		});
	}, function(widget) {
		widget.disable_input();
		AdminInterface.content.append(widget._element);
		// widget.load_page(initial_selection);
	}, jQuery.noop);
	
	//Info bar stuff
	AdminInterface.info_bar.prepareWidget(function(info_bar) {
		info_bar.add_button('add-new-item', function() {
			Widget.create('sidebar_input', function(sidebar_input) {
				sidebar_input.add_new_sidebar_input("{{writeString=wns.page.new_entry}}", function(name, cleanup_callback) {
					//This is the save callback
					var page_id = page_tree.current_element_identifier;
					page_detail.createPage(page_id, name, function(result, error) {
						if(error) {
							if(error.exception_type == 'ValidationException') {
								for(exception in error.parameters) {
									if(jQuery.isPlainObject(error.parameters[exception])) {
										Widget.notifyUser('alert', jQuery.parseHTML(error.parameters[exception].string));
										return;
									}
								}
							}
						} else {
							cleanup_callback(page_id);
						}
					});
				}, function(page_id) {
					page_tree.reload_element(page_tree.element_with_identifier(page_id));
				});
			});
		}, 'n', false);
		// info_bar.add_element(info_bar_buttons, true, false);
	});
	
	// init main content
	var click_handler = function(event, element, page_id, has_changed) {
		if(has_changed) {
			page_detail.load_page(page_id);
		}
		// jQuery("div.accordion").accordion( "activate", 0);
	};
	
	Widget.createWithElement('tree', function(widget) {
		jQuery.extend(widget.settings, {
			description_from_item: function(item) {
				return item.Name;
			},
			has_children: function(item) {
				return item.TreeRight-item.TreeLeft > 1;
			},
			may_create_children: function(item) {
				return item !== undefined && item.UserMayCreateChildren;
			},
			identifier_from_data: function(data) {
				return data.Id;
			},
			is_open: function(item) {
				return item.TreeLeft <= {{writeRequestValue=initial_page_tree_left}} && item.TreeRight > {{writeRequestValue=initial_page_tree_left}};
			},
			is_active: function(item) {
				return item.Id === initial_selection;
			},
			custom_class: function(item) {
				if(item.IsInactive) {
					return 'page_is_inactive';
				}
			},
			icons_from_item: function(item) {
				var result = [];
				if(item.IsProtected) {
					result.push('is-protected');
				}		
				if(item.IsHidden) {
					result.push('is-hidden');
				}
				return result;
			}
		});
	}, function(widget) {
		page_tree = widget;
		AdminInterface.sidebar.append(widget._element);
		widget.handle('tree_item-activated', click_handler).handle('updated', jQuery.noop);//TODO: update icons on update
	}, '{{writeRequestValue=tree_session}}');
	
	// init language change
	// Widget.handle('cmos-language_changed', function() {
	// 	page_tree.update_elements();
	// 	// reload the sidebar and page detail
	// });
});


